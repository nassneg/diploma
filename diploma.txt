Дипломная работа

1.Введение (Постановка и анализ задачи)
  Немного информации о платформе
    Основное предложение ServiceNow - это готовая платформа, которая позволяет бизнесу упростить и автоматизировать рутинные рабочие задачи и обеспечить плавное выполнение проектов с использованием единой модели данных. Компании, использующие ServiceNow, могут быстро достичь улучшенных возможностей самообслуживания для всех пользователей (как сотрудников, так и клиентов) и повысить эффективность операций обслуживания. В первые годы существования ServiceNow продавался как решение ITSM (Управление информационными технологиями) и получил быстрое признание со стороны ИТ-специалистов. Однако благодаря своей элегантной, интуитивно понятной конструкции платформы ServiceNow все чаще включается в другие сервисные и бизнес-подразделения в растущем списке отраслей. Кроме того, ServiceNow обеспечивает бизнес-аналитику, в том числе KPI, посредством ServiceNow Performance Analytics, позволяя группам, отвечающим за управление услугами, преобразовывать идеи в улучшения. Сегодня в ServiceNow наблюдается заметный рост в CSM (управление обслуживанием клиентов), ITBM (управление бизнесом в сфере информационных технологий), PPM (управление портфелем проектов) и ITOM (управление операциями в сфере информационных технологий).
2.Особенности Cloud Platform Service Now
  Рассказать о том что будет использоваться мною в интеграции:
    Service Portal
    Business Rules
    Script Include
    restMessage
    JSON Parse 
    Reporting and Dashboards

  Вывод:
    //Было бы неплохо найти инфу об исследованиях, подтверждающих эффективность внедрения СН

3.Анализ существующих OCR сервисов. Выбор лучшего (//необходимо предоставить какие-нибудь эксперименты над сервисами и выбрать лучшие для того, чтобы работать с ними)
  Tesseract JS
  Google Vision AI
  ABBYY FineReader Engine (обосновать дороговизну использования данного апи)

4.Работа с tesseract JS
  // Интеграция с платформой
    Добавляем библиотеку Tesseract локально в инстанс (UI Script)
    Настраиваем вид таблицы Images.
    Создаём Клиентский скрпит, в котором вызываем методы ранее добавленной библиотеки. Связываем необходимые поля на форме Images логикой.
    В итоге видим, что нельзя обнаружать текст с изображений, включающих в себя текст, написанный на более чем одном языке. Этот недостаток является существенным, так как чеки включают в себя и русский и английский текст.
  // Выводы
    Не подходит для работы с чеками
5.Работа с Google Cloud
  Аутентификация
  Настройка Гугл консоли
  Создание проекта, API Key и credentials
  Формирование JSON request
    Кодирование картинки
    Энд поинт
    методы
  Отправка request
  Получение Responce
  Парсинг JSON
6.UX
  Логика описана в блоксхеме, её надо подробнее расписать

7.UI
  Работа с Сервис порталом
  AJAX
  HTML
  Jelly


//Неплохо было бы, подкрепить оправданность интеграции статистикой и замерами времени потраченного на ручной/с использованием OCR труд
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Главные задачи:
  1. Создание логики и удобного UX, чтобы пользователь мог только загрузить картинку, нажать кнопку и получить текст
  2. Создание UI (необходимо создать таблицу для наших данных, форму которая поможет пользователю загружать картинку, дашборды и тому подобное для красоты)
  5. Продумать алгоритм постобработки чеков
